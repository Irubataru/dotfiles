{% if 'gpg' in modules %}
# Set the gpg tty so we are prompted for passwords and pins
export GPG_TTY=$(tty)

# Path to the dotfiles
export DOTFILES={{ dotfiles_directory }}

{% endif %}
{% if zsh.theme == "powerlevel10k/powerlevel10k" %}
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

{% endif %}
# Some options (man zshoptions)
setopt autocd extendedglob nomatch menucomplete

# No one likes beep
unsetopt BEEP

# Tab through options
zstyle ':completion:*' menu select

# Initialize autocomplete
autoload -Uz compinit colors
compinit
colors

# Add paths in case the ones from /etc/profile.d weren't sourced
source ~/.bash_userpaths.sh

roles=(
{% for item in modules %}
  "{{ item }}"
{% endfor %}
)

# all of our zsh files
typeset -U config_files
config_files=()

# loop through roles and collect zsh config files
for role in ${roles}; do
  config_files+=(${DOTFILES}/roles/${role}/*.zsh(N))
done

# load the path files
for file in ${(M)config_files:#*/path.zsh}; do
  source $file
done

{% if oh_my_zsh.use %}
{% include "oh-my-zsh.j2" %}

{% endif %}
# load everything but the path and completion files
for file in ${${${config_files:#*/path.zsh}:#*/completion.zsh}:#*/final.zsh}; do
  source $file
done

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}; do
  source $file
done

for file in ${(M)config_files:#*/final.zsh}; do
  source $file
done

unset config_files

{% if not zplug.use %}
# TODO Remember fzf
# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

{% endif %}
# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]; then
  source ~/.localrc
fi

{% if zplug.use %}
{% include "zplug.j2" %}

# Source plugins and add commands to $PATH
zplug load

{% endif %}
# Keybinds
bindkey "^ " end-of-line # [ctrl-space] - autocomplete suggestion
bindkey "^[[A" up-line-or-beginning-search   # [up arrow]   - history backwards
bindkey "^[OA" up-line-or-beginning-search   # [up arrow]   - history backwards
bindkey "^[[B" down-line-or-beginning-search # [down arrow] - history forwards
bindkey "^[OB" down-line-or-beginning-search # [down arrow] - history forwards
bindkey "^[[1;5C" forward-word  # [ctrl-left arrow]  - move full word
bindkey "^[[1;5D" backward-word # [ctrl-right arrow] - move full word
bindkey "${terminfo[khome]}" beginning-of-line # [home] - beginning of line
bindkey "${terminfo[kend]}"  end-of-line # [end] - end of line
bindkey "${terminfo[kcbt]}" reverse-menu-complete # [shift-tab] - move completion backwards
{% if atuin.use %}
bindkey "^r" _atuin_search_widget
{% endif %}
{% if zsh.theme == "powerlevel10k/powerlevel10k" %}

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
{% endif %}
{% if hw_cmd_only %}

# Run tmux whenever zsh is launched if it isn't already running
if [ "$TMUX" = "" ]; then tmux; fi
{% endif %}

# Source Cargo environment variables
source "$HOME/.cargo/env"
{% if "npm" in modules %}

# Source NVM (Node Version Manager)
source /usr/share/nvm/init-nvm.sh
{% endif %}
